题目内容：

给定一个长度为N的区域，及4种不同长度的瓷砖：灰瓷砖（长为1格）、红瓷砖（长为2格）、绿瓷砖（长为3格）与蓝瓷砖（长为4格），求所有不同的铺满整个区域的方法数

输入格式:

一个自然数N

输出格式：

一行数字，表示不同的方法总数

输入样例：

5

输出样例：

15


思路：参考课件中关于“找零兑换问题的递归解法”，令 F(N) 表示给长度为N的区域铺瓷砖的总方法数，进一步缩小问题规模，铺第一块瓷砖有4种可能（前提N>4）,
F(N) = F(N-1) + F(N-2) + F(N-3) + F(N-4)。然后，需要确定递归的结束条件：这里也就是剩余的空间为0（space=0）,返回1，代表一种铺满手段。

代码如下（满分）：

def tile(sizelist,space,knownresult):
    num = 0
    if space == 0:
        return 1
    elif knownresult[space] != 0:
        return knownresult[space]
    else:
        for i in [t for t in sizelist if t <= space]:
            num = num + tile(sizelist,space-i,knownresult)
            knownresult[space] = num
    return num

sizelist = [1, 2, 3, 4]
space = eval(input())
knownresult = [0]*(space+1)
print(tile(sizelist,space,knownresult))
