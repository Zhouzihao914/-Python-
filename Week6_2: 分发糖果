题目内容：

老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。



你需要按照以下要求，帮助老师给这些孩子分发糖果：

每个孩子至少分配到 1 个糖果。

相邻的孩子中，评分高的孩子必须获得更多的糖果。

那么这样下来，老师至少需要准备多少颗糖果呢？



输入格式:

一个列表，以文本格式的有效Python表达式给出



输出格式：

一行数字，表示满足分配条件所需的最少糖果数



输入样例：

[1,2,2]



输出样例：

4


思路：正向反向分别遍历一次所有孩子（元素），正向遍历时，若当前孩子比前一个孩子得分高，给当前孩子多发一个糖果（相对于前一个孩子）。
反向遍历时，若当前孩子比后一个孩子得分高且当前孩子的糖果小于等于后一个孩子，给当前孩子多发一个糖果（相对于后一个孩子）。
这里要特别注意反向遍历时的判断条件“且当前孩子的糖果小于等于后一个孩子”必不可少，因为在正向遍历的时候，可能已经更改过糖果值，
反向遍历的时候要避免错误的二次更改。

代码（满分）如下：
def candy(ratings):
    # code here
    L = len(ratings)
    numlist = [1]*L
    for i in range(1,L):
        if ratings[i] > ratings[i-1]:
            numlist[i] = numlist[i-1] + 1
        
    
    for i in range(L-2,-1,-1):
        if ratings[i] > ratings[i+1] and numlist[i] <= numlist[i+1]:
            numlist[i] = numlist[i+1] + 1
        
    num = 0
    for k in range(L):
        num = num + numlist[k]
    #print(numlist)
    return num
 
lst = eval(input())

print(candy(lst))
